


var display = {
            "DISPLAY": {
                "BTC": {
                    "USD": {
                        "FROMSYMBOL": "Ƀ",
                        "TOSYMBOL": "$",
                        "MARKET": "CryptoCompare Index",
                        "PRICE": "$ 14,624.3",
                        "LASTUPDATE": "Just now",
                        "LASTVOLUME": "Ƀ 0.05483",
                        "LASTVOLUMETO": "$ 799.39",
                        "LASTTRADEID": "145826016",
                        "VOLUMEDAY": "Ƀ 84,958.0",
                        "VOLUMEDAYTO": "$ 1,238,574,452.6",
                        "VOLUME24HOUR": "Ƀ 123,694.2",
                        "VOLUME24HOURTO": "$ 1,780,576,820.0",
                        "OPENDAY": "$ 14,398.7",
                        "HIGHDAY": "$ 15,109.8",
                        "LOWDAY": "$ 13,951.1",
                        "OPEN24HOUR": "$ 13,960.0",
                        "HIGH24HOUR": "$ 15,147.8",
                        "LOW24HOUR": "$ 13,443.7",
                        "LASTMARKET": "Bitfinex",
                        "CHANGE24HOUR": "$ 664.23",
                        "CHANGEPCT24HOUR": "4.76",
                        "CHANGEDAY": "$ 225.57",
                        "CHANGEPCTDAY": "1.57",
                        "SUPPLY": "Ƀ 16,769,875.0",
                        "MKTCAP": "$ 245.25 B",
                        "TOTALVOLUME24H": "Ƀ 324.93 K",
                        "TOTALVOLUME24HTO": "$ 4,723.44 M"
                    }
                }
            }
        }

//   var defaultdata = {
//                       "speech": "hello",
//                       "messages": [
//                         {
//                           "type": 1,
//                           "platform": "telegram",
//                           "title": cryptoCoin[0].c +"("+cryptoCoin[0].n+")",
//                           "subtitle": "\n\n*"+cryptoCoin[0].c +"("+cryptoCoin[0].n+")*"+ " is " + "*"+coinValue + " " + currency+"*",
//                           "imageUrl": ilink,
//                           "buttons": [
//                             {
//                               "text": "View Profile",
//                               "postback": link
//                             }
//                           ]
//                         },
//                         {
//                           "type": 1,
//                           "speech": "hello"
//                         }
//                       ]
//               }





//console.log("Value" + gUser)

// dbAllCoinZ.g_createRecord(gUser,{
//     displayName: "rahul",
//     uniqID: 1234,
//     curr: "INR"
// })


// dbAllCoinZ.g_UpdateInsert(gUser,{uniqID:123456},{
//     displayName: "mrrahul",
//     uniqID: 12345,
//     curr: "INR"
// // })

// var a = dbAllCoinZ.g_getRecords(gUser);
// a.then(function (success) {
//     //console.log("Value" + JSON.stringify(success))
// }, function (error) {
//     //console.log("Value" + JSON.stringify(error))
// })



    // const app = new ApiAiApp({
    //     req,
    //     res
    // });

    ////console.log(JSON.stringify(req.headers))
    ////console.log(JSON.stringify(req.body))

//     dbAllCoinZ.g_getRecords(gUser, {
//         displayName: "rahul",
//         uniqID: 1234,
//         curr: "INR"
//     }).then(function (items) {
//         console.log(JSON.stringify(items))

//     })










server.post('/getCoinValue', function (req, res) {

  
   console.log(JSON.stringify(req.result))

    let result = req.body.result;
    let source = req.body.originalRequest.source

    //console.log(JSON.stringify(req.body.originalRequest))
    ////console.log(result.metadata.intentName)
   // console.log(JSON.stringify(req.body))


    switch (source) {
        case "telegram":
            platform = "telegram"
            displayName = (req.body).originalRequest.data.message.chat.username;
            uniqID = (req.body).originalRequest.data.message.chat.id
            break;
        case "slack_testbot":
            displayName = (req.body).originalRequest.data.user;
            uniqID = (req.body).originalRequest.data.user;
            platform = "slack"
            break;
        case "skype":
            platform = "skype"
            break;
        default:
            platform = "telegram"
    }
    Util.m_platform = platform


  
    if (result.metadata.intentName == "1ViewPortfolio") {

        GenProc.m_getTotalPortfolioValue({
            displayName,
            uniqID
        }, false).then(function (VPortfolio) {
            sendDialogflowResponse(res, VPortfolio)

        }, function (error) {
            console.log(error);
            sendDialogflowResponse(res, error)
        })
    } else if (result.metadata.intentName == "1TotalPortfolioValue") {
        //var welcomeMessageResponse = GenProc.m_getWelcomeMessage(platform,displayName)
        //sendDialogflowResponse(res, welcomeMessageResponse)
        GenProc.m_getTotalPortfolioValue({
                displayName,
                uniqID
            }, true)
            .then(function (TPV) {
                    console.log("aaa" + TPV)
                    sendDialogflowResponse(res, TPV)
                },
                function (error) {
                    console.log(error);
                    sendDialogflowResponse(res, error)
                })





    } else if (result.metadata.intentName == "BuySellCoin") {
        


    } else if (result.metadata.intentName == "Default Welcome Intent" || result.metadata.intentName =="help") {
       
    } else if (result.metadata.intentName == "getCoinValue") {

        Util.m_getCurrency(uniqID).then(function () {

            var count = 1;
            if (result.parameters.count != "") {
                count = result.parameters.count
            }

            var oCoin = Util.m_getCoinObject({
                count: count,
                CryptoCoin: result.parameters.CryptoCoin
            })
            oCoin.then(function (coinResult) {
                sendResult(true, coinResult, res)
            }).catch(function (err) {
                console.log("m_getCurrency method failed")
            });
        })

    } else if (result.metadata.intentName == "ChangeCurrency") {
        

    } else if (result.metadata.intentName == "Default Fallback Intent") {
      
      
            //sendResult(false, null, res)
    }

  
});


